<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/security
     http://www.springframework.org/schema/security/spring-security-3.2.xsd
     http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">

	<http use-expressions="true">
		<intercept-url pattern="/login" access="isAnonymous()" />
		<intercept-url pattern="/main" access="isAuthenticated()" />
		<intercept-url pattern="/admin/**" access="hasRole('ADMIN')" />
		<intercept-url pattern="/curator/**" access="hasRole('CURATOR')" />
		<intercept-url pattern="/hr/**" access="hasRole('HR')" />
		<intercept-url pattern="/student/**" access="hasRole('STUDENT')" />

		<form-login login-page='/login' login-processing-url="/j_spring_security_check"
			default-target-url="/projects" always-use-default-target="false"
			authentication-failure-url="/login?error=true" username-parameter="username"
			password-parameter="password" />

		<logout logout-url="/logout" logout-success-url="/login?logout"
			delete-cookies="JSESSIONID" invalidate-session="true" />
	</http>

	<authentication-manager>
		<!-- authentication from database -->
		<authentication-provider>
			<password-encoder hash="bcrypt" />
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select users.email as username, users.password, 1 as enabled from 
users where users.email=?"
				authorities-by-username-query="select users.email as username, roles.role from ((users INNER JOIN user_roles ON users.id = user_roles.user_id) INNER JOIN roles ON user_roles.role_id = roles.id) WHERE users.email = ?" />
		</authentication-provider>
	</authentication-manager>

</beans:beans>